//package cos.mos.utils.dao.gen;
//
//import android.database.Cursor;
//import android.database.sqlite.SQLiteStatement;
//
//import org.greenrobot.greendao.AbstractDao;
//import org.greenrobot.greendao.Property;
//import org.greenrobot.greendao.internal.DaoConfig;
//import org.greenrobot.greendao.database.Database;
//import org.greenrobot.greendao.database.DatabaseStatement;
//
//import cos.mos.utils.dao.UserBean;
//
//// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
///**
// * DA O  for table "USER_BEAN".
//*/
//public class UserBeanDao extends AbstractDao<UserBean, Long> {
//
//    public static final String TABLENAME = "USER_BEAN";
//
//    /**
//     * Properties of entity UserBean.<br/>
//     * Can be used for QueryBuilder and for referencing column names.
//     */
//    public static class Properties {
//        public final static Property ImageId = new Property(0, Long.class, "imageId", true, "_id");
//        public final static Property Url = new Property(1, String.class, "url", false, "URL");
//        public final static Property Thumb = new Property(2, String.class, "thumb", false, "THUMB");
//    }
//
//
//    public UserBeanDao(DaoConfig config) {
//        super(config);
//    }
//
//    public UserBeanDao(DaoConfig config, DaoSession daoSession) {
//        super(config, daoSession);
//    }
//
//    /** Creates the underlying database table. */
//    public static void createTable(Database db, boolean ifNotExists) {
//        String constraint = ifNotExists? "IF NOT EXISTS ": "";
//        db.execSQL("CREATE TABLE " + constraint + "\"USER_BEAN\" (" + //
//                "\"_id\" INTEGER PRIMARY KEY ," + // 0: imageId
//                "\"URL\" TEXT," + // 1: url
//                "\"THUMB\" TEXT);"); // 2: thumb
//    }
//
//    /** Drops the underlying database table. */
//    public static void dropTable(Database db, boolean ifExists) {
//        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"USER_BEAN\"";
//        db.execSQL(sql);
//    }
//
//    @Override
//    protected final void bindValues(DatabaseStatement stmt, UserBean entity) {
//        stmt.clearBindings();
//
//        Long imageId = entity.getImageId();
//        if (imageId != null) {
//            stmt.bindLong(1, imageId);
//        }
//
//        String url = entity.getUrl();
//        if (url != null) {
//            stmt.bindString(2, url);
//        }
//
//        String thumb = entity.getThumb();
//        if (thumb != null) {
//            stmt.bindString(3, thumb);
//        }
//    }
//
//    @Override
//    protected final void bindValues(SQLiteStatement stmt, UserBean entity) {
//        stmt.clearBindings();
//
//        Long imageId = entity.getImageId();
//        if (imageId != null) {
//            stmt.bindLong(1, imageId);
//        }
//
//        String url = entity.getUrl();
//        if (url != null) {
//            stmt.bindString(2, url);
//        }
//
//        String thumb = entity.getThumb();
//        if (thumb != null) {
//            stmt.bindString(3, thumb);
//        }
//    }
//
//    @Override
//    public Long readKey(Cursor cursor, int offset) {
//        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
//    }
//
//    @Override
//    public UserBean readEntity(Cursor cursor, int offset) {
//        UserBean entity = new UserBean();
//        readEntity(cursor, entity, offset);
//        return entity;
//    }
//
//    @Override
//    public void readEntity(Cursor cursor, UserBean entity, int offset) {
//        entity.setImageId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
//        entity.setUrl(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
//        entity.setThumb(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
//     }
//
//    @Override
//    protected final Long updateKeyAfterInsert(UserBean entity, long rowId) {
//        entity.setImageId(rowId);
//        return rowId;
//    }
//
//    @Override
//    public Long getKey(UserBean entity) {
//        if(entity != null) {
//            return entity.getImageId();
//        } else {
//            return null;
//        }
//    }
//
//    @Override
//    public boolean hasKey(UserBean entity) {
//        return entity.getImageId() != null;
//    }
//
//    @Override
//    protected final boolean isEntityUpdateable() {
//        return true;
//    }
//
//}
